# Jcon at g=363, x=2
g=363 is speed_next == speed
x=2 is queue w2(1)



# MX variables and parameters
[opti_x_1, opti_x_3, opti_x_4, opti_x_2] = [w, rho, v, r]
[opti_p_1, opti_p_5, opti_p_6, opti_p_7] = [d, a, v_free, rho_crit]




# Original jacobian
@1=0.00277778									% T	
@2=40, 											% kappa (?)
@3=1.69444e-005, 	
@4=(p_1+(x_1/@1)), 								% x_1=w(2,1), p_1=d(2,1)
@5=180, 										% rho_max
@6=(2000*fmin(x_86,((@5-x_91)/(@5-p_136)))), 	% C=2000, x_86=r(1), x_91=rho(2,1), p_136=rho_crit
@7=(x_91+@2), ((!(((((x_220+(0.555556*((p_135*exp(((-1/p_134)*pow((x_91/p_136),p_134))))-x_220)))+((@1*x_220)*(x_219-x_220)))-((33.3333*(fmax(fmin(x_91,p_136),p_2)-x_91))/(x_91+@2)))-(((@3*fmin(@4,@6))*x_220)/@7))<=0.001))*((x_220*(@3*(360*(@4<=@6))))/@7))



# Symbolic substitutions by hand
33.3333 = eta * T / (tau * L)
x_220 = v3(1)
@4 = d2(1) + w2(1) / T
@6 = C * min(r(1), (rho_max - rho2(1)) / (rho_max - rho_crit))
@7 = rho2(1) + kappa

condition = 
((((x_220+(0.555556*((p_135*exp(((-1/p_134)*pow((x_91/p_136),p_134))))-x_220)))+((@1*x_220)*(x_219-x_220)))-((33.3333*(fmax(fmin(x_91,p_136),p_2)-x_91))/(x_91+@2)))-(((@3*fmin(@4,@6))*x_220)/@7)) <= 0.001

value = 
!condition * (v3(1) * (@3 * (360 * (d2(1) + w2(1) / T <= @6)))) / (rho2(1) + kappa)


AHHHHHHH:  pow((x_91/p_136),p_134) = pow((rho / rho_crit), a) FAILS WHEN RHO_CRIT IS NEGATIVE -> immaginary number -> nan
				 
